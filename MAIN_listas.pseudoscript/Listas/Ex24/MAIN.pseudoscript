# Implemente a busca binária num array ordenado.

array = [1, 2, 3, 4, 5, 6, 7, 8]

tamanhoArray = tamanho(array) 

funcao binarySearch(array, alvo):
	inicio = 0
        fim = tamanhoArray - 1
	
	enquanto inicio <= fim
		meio = (inicio + fim) // 2
		se array[meio] == alvo
			retorna meio    # retorna o indice do elemento encontrado
		senao array[meio] < alvo:
			inicio = meio + 1
		senao:
			fim = meio - 1

	retorna - 1    # se o valor nao for encontrado


# definir o elemento a procurar
entrada("Insere um número a procurar no array", alvo)

# aplicar a funcao binarySearch
indice = binarySearch(array, alvo):

se indice != 1
	imprime("Elemento" + alvo + "encontrado no índice" + indice + "do array")
senao
	imprime("Elemento" + alvo + "nao encontrado no array")	


/* se o array nao estiver ordenado, temos de ordenar primeiro o array para aplicar binarySearch

Binary Search
• In binary search, the idea of the algorithm is to divide and
conquer, reducing the search area by half each time, trying
to find a target number.
• In order to leverage this power however, our array must first be sorted, else
we cannot make assumptions about the array’s contents.

In pseudocode:
• Repeat until the (sub)array is of size 0:
• Calculate the middle point of the current (sub)array.
• If the target is at the middle, stop.
• Otherwise, if the target is less than what’s at the middle, repeat,
changing the end point to be just to the left of the middle.
• Otherwise, if the target is greater than what’s at the middle,
repeat, changing the start point to be just to the right of the
middle. */

